name: CI/CD Helm Chart -> Helm Repo

on:
  push:
    branches:
      - main

jobs:
  package-and-publish:
    runs-on: ubuntu-latest

    steps:
      # 1. Clonar el repo de charts
      - name: Checkout charts repository
        uses: actions/checkout@v3

      # 2. Instalar Helm
      - name: Install Helm
        uses: azure/setup-helm@v3

      # 3. Instalar yq para manipular YAML
      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
          yq --version

      # 4. Incrementar versión del chart automáticamente
      - name: Bump Chart version
        run: |
          CHART_PATH=delivery-app/delivery-app
          VERSION=$(yq eval '.version' $CHART_PATH/Chart.yaml)
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
          PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          yq eval ".version = \"$NEW_VERSION\"" -i $CHART_PATH/Chart.yaml
          yq eval ".appVersion = \"${GITHUB_SHA}\"" -i $CHART_PATH/Chart.yaml
          echo "New chart version: $NEW_VERSION"

      # 5. Empaquetar chart directamente en repo de Helm
      - name: Package Helm chart
        run: |
          helm package ./delivery-app/delivery-app -d ../helm_delivery-app

      # 6. Actualizar index.yaml en el repo de Helm
      - name: Update Helm repo index
        run: |
          cd ../helm_delivery-app
          helm repo index . --url https://andresosa21.github.io/helm_delivery-app/ --merge index.yaml

      # 7. Commit y push al repo de Helm
      - name: Commit and push Helm chart
        run: |
          cd ../helm_delivery-app
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add *.tgz index.yaml
          git commit -m "Empaquetado delivery-app $NEW_VERSION"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}